<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_enemy_lizardmen</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init

//stats
hp=2

randomize()
state=0
movespeed=3
left=false
right=false
down=false
up=false
jumpheight=7.5
collide=0
color=make_colour_rgb(random_range(0,155),random_range(155,255),random_range(0,155))
//normal config
dir=0
grav=0
hspd=0
vspd=0
jump=false

//ai
sticked=false
h_range=random_range(280,320)
stick_range=random_range(90,110)


//spawn
if instance_exists(enemy_spawn)
{
 start_x=enemy_spawn.x
 start_y=enemy_spawn.y
}
 else
{
 start_x=obj_player.x
 start_y=obj_player.y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///sticked reset
sticked=false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///release
state=0
vspd = -jumpheight;
if obj_player.b_movespeed&lt;0 {obj_player.b_movespeed+=1}
choose(left=true,right=true)
alarm[1]=50
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///physics
if state=0
{
 if !place_meeting(x,y+1,obj_block) &amp;&amp; (!place_meeting(x,y+1,obj_jumpthru) or place_meeting(x,y,obj_jumpthru)) // if we are in the air
  {
       grav = .4;
       vspd += grav;
  }
  else // 
  {
      grav = 0; 
      vspd = 0; 
      if up=true
      {
       vspd = -jumpheight;
      }
      if (down) and place_meeting(x,y+1,obj_jumpthru)
      {
       y+=1
      }
      
  }
  
  //if (up=false &amp;&amp; vspd &lt; 0)  
  //{
  //    vspd *= .5; 
  //}
  if vspd &gt; 15 
  {
      vspd = 15; 
  }
  repeat(abs(vspd)) 
  {
      if sign(vspd) &lt; 0
      {
          if !place_meeting(x,y-1,obj_block)
          {
              y += sign(vspd);
          }
          else
          {
              vspd = 0;
          }
      }
      else 
      {
          if !place_meeting(x,y+1,obj_block) &amp;&amp; (!place_meeting(x,y+1,obj_jumpthru) or place_meeting(x,y,obj_jumpthru))
          {
              y += sign(vspd);
          }
      }
  }
  hspd = ((right)-(left))*movespeed; //&lt;-- speed
  repeat(abs(hspd)) 
  {  
     if !place_meeting(x+sign(hspd),y,obj_block)
     {
         x += sign(hspd); 
     }
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI: state 0 [Normal]
if state=0
{
 if left=true  {dir=0}
 if right=true {dir=180} 

 if distance_to_point(obj_player.x,y)&gt;h_range
 {
  if obj_player.x&gt;x
  {
   right=true
   left=false
   jump=false
  }
   else
  {
   right=false
   left=true
   jump=false
  }
 }  

 if distance_to_point(obj_player.x,y)&lt;stick_range
 {
  if !place_meeting(x,y+1,obj_block) &amp;&amp; (!place_meeting(x,y+1,obj_jumpthru) or place_meeting(x,y,obj_jumpthru)) 
  {
   //
  }
   else
  {
   if jump=false
   {
    if x&lt;obj_player.x {if right=true{up=true}else{up=false}}
    if x&gt;obj_player.x {if left=true {up=true}else{up=false}}
    jump=true
   }
    else
   {
    up=false
   }
  }
 }
  else
 {
  up=false
 } 
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI: state 10 [Cling]
if state=10
{
 if alarm[0]=-1 {alarm[0]=100}
 x=obj_player.x+(xx*ix)
 y=obj_player.y+(yy*iy)
 if alarm[0]=33 {screen_shake(5) obj_player.hp-=0.5}
 if alarm[0]=66 {screen_shake(5) obj_player.hp-=0.5}
 if alarm[0]=99 {screen_shake(5) obj_player.hp-=0.5}
 if obj_player.state=2 {alarm[0]=1 state=0
 if obj_player.b_movespeed&lt;0 {obj_player.b_movespeed+=1}}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset location if to far
if distance_to_point(start_x,start_y)&gt;2000
{
 state=0
 alarm[0]=1
 blurr(100,5)
 x=start_x
 y=start_y
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="enemy_border">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reverse
if state=0 and (place_meeting(x,y+1,obj_block) &amp;&amp; (place_meeting(x,y+1,obj_jumpthru) or !place_meeting(x,y,obj_jumpthru)))
{
 if left=true {right=true left=false} else {left=true right=false}
 if place_meeting(x,y,other) {move_outside_all(dir,sprite_width*2)}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="enemy_lizard">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move outside
/*
move_outside_all(other.dir,sprite_width)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move outside
move_outside_all(90,1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stick to player
if state=0 and sticked=false and obj_player.state!=2
{
 if !place_meeting(x,y+1,obj_block) &amp;&amp; (!place_meeting(x,y+1,obj_jumpthru) or place_meeting(x,y,obj_jumpthru))
 {
  xx=random_range(distance_to_point(obj_player.x,y)-10,distance_to_point(obj_player.x,y)+10)
  yy=random_range(distance_to_point(x,obj_player.y)-5,distance_to_point(x,obj_player.y)+5)
  if x&lt;obj_player.x {ix=-1} else {ix=1}
  if y&lt;obj_player.y {iy=-1} else {iy=1}
  obj_player.b_movespeed+=-1
  sticked=true;state=10;
 }
} 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw

draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,color,1)

draw_text(x,y,hit)

draw_text(x,y-20,hp)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
