<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_mc_idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_mc_hitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///platform init
image_speed=0.15
end_animation=true
dashing=true
crouching=false
grav = 0;
vspd = 0;
hspd = 0;

//other
movespeed=7
f_movespeed=0
b_movespeed=0
acc=0.2
state=0
dir=0
shoot_dir=0
shoot_dir_r=0
longdash=20
shortdash=40
shakex=0.3
shake=shakex
charge=0
chargemax=10
shoot_delay=15
bullet_speed=15
saw_speed=10
saw_delay=40
imm=1
creation=false
f=FX_bullet_charge
v=FX_bullet_charge_2
charging=false
weapon=3
weaponmax=3


///stats
mstamina=20
stamina=mstamina
mhp=20
hp=mhp

//etc.
oth=obj_cam
image_ignore=spr_mc_hitbox
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shooting image timer
image_ignore=spr_mc_hitbox
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///cling fall
if state=1.5 {state=0}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///When alarm is running long dash is disabled
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///shooter timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///reset test room if hp is 0
if room=demo_room
{
 if hp=0
 {
  game_restart()
 }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///stop moving inside
if place_meeting(x+lengthdir_x(speed,direction),y+lengthdir_y(speed,direction),obj_block) {speed=0 move_outside_all(direction-180,10)}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Keys init
key_init()
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MC animation
if state=0
{
 if place_meeting(x,y+1,obj_block) or (place_meeting(x,y+1,obj_jumpthru))
 {
  if (keyboard_check(key_right) or pad_right) {image_xscale= 1 set_image_step(spr_mc_run,0.3)}
  if (keyboard_check(key_left) or pad_left)   {image_xscale=-1 set_image_step(spr_mc_run,0.3)}
  
  if ((!keyboard_check(key_right) and (!pad_left)) and (!keyboard_check(key_left) and !pad_right))
  {
   ///crouching
   if keyboard_check(key_down)
   {
    set_image_stop(spr_mc_crouch,0.3)
    crouching=true
   } 
    else
   {
    set_image_step(spr_mc_idle,0.15)
    crouching=false
   }  
  }
   else
  {
   crouching=false
  } 
 }
  else
 {
  crouching=false
  image_xscale=imm
  if (keyboard_check(key_right) or pad_right) {image_xscale= 1 imm= 1}
  if (keyboard_check(key_left) or pad_left)   {image_xscale=-1 imm=-1}
  if !keyboard_check(key_left) and !keyboard_check(key_right)
  and pad_left and pad_right
  {
   image_xscale=imm
  } 
  set_image_step(spr_mc_fall,0.3)
 }
}

if state=1
{
 if (keyboard_check(key_right) or pad_right) {imm= 1}
 if (keyboard_check(key_left) or pad_left)   {imm=-1} 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State0: Movement
if state=0 or state=1 //ground movement
{
 if !place_meeting(x,y+1,obj_block) &amp;&amp; (!place_meeting(x,y+1,obj_jumpthru) or place_meeting(x,y,obj_jumpthru)) // if we are in the air
 {  
     if state!=1
     {
      grav = .4;
      vspd += grav;
     }
 }
 else // 
 {
     grav = 0; 
     vspd = 0; 
     //if keyboard_check_pressed(key_up) 
     //{
     //    vspd = -10.5;
     //}
     if (keyboard_check_pressed(key_down) or pad_down) and place_meeting(x,y+1,obj_jumpthru)
     {
      y+=1
     }
     
 }
 if (keyboard_check_released(key_up)&amp;&amp; vspd &lt; 0)  
 {
     vspd *= .5; 
 }
 if vspd &gt; 15 
 {
     vspd = 15; 
 }
 repeat(abs(vspd)) 
 {
     if sign(vspd) &lt; 0
     {
         if !place_meeting(x,y-1,obj_block)
         {
             y += sign(vspd);
         }
         else
         {
             vspd = 0;
         }
     }
     else 
     {
         if !place_meeting(x,y+1,obj_block) &amp;&amp; (!place_meeting(x,y+1,obj_jumpthru) or place_meeting(x,y,obj_jumpthru))
         {
             y += sign(vspd);
         }
     }
 }
}

if state=0
{
 alarm[2]=-1
 hspd = ((keyboard_check(key_right) or pad_right)-(keyboard_check(key_left) or pad_left))*f_movespeed; //&lt;-- speed
 repeat(abs(hspd)) 
 {  
     if !place_meeting(x+sign(hspd),y,obj_block) 
     {
         x += sign(hspd); 
     }
 }
}  
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State1: Dash
if state=0 and alarm[1]=-1
{
  if keyboard_check(key_up)    or pad_up    {dir=90}
  if keyboard_check(key_down)  or pad_down  {dir=270}
  if keyboard_check(key_left)  or pad_left  {dir=180}
  if keyboard_check(key_right) or pad_right {dir=0}
  if (keyboard_check(key_up)   or pad_up)   and (keyboard_check(key_left)  or pad_left)  {dir=135}
  if (keyboard_check(key_up)   or pad_up)   and (keyboard_check(key_right) or pad_right) {dir=45}
  if (keyboard_check(key_down) or pad_down) and (keyboard_check(key_left)  or pad_left)  {dir=225}
  if (keyboard_check(key_down) or pad_down) and (keyboard_check(key_right) or pad_right) {dir=315}
 //
 shake=shakex
 gamepad_set_vibration(0,0,0)
 if (keyboard_check(key_dash) or pad_dash)
 {
  direction=dir
  speed=longdash
  state=1
  //image
  if dir=180 {image_xscale=-1 set_image_step(spr_mc_dash_horizontal,0.3)}
  if dir=0   {image_xscale= 1 set_image_step(spr_mc_dash_horizontal,0.3)}
  if dir=135 {image_xscale=-1 set_image_step(spr_mc_dash_diagnal_up,0.3)}
  if dir=45  {image_xscale= 1 set_image_step(spr_mc_dash_diagnal_up,0.3)}
  if dir=225 {image_xscale=-1 set_image_step(spr_mc_dash_diagnal_down,0.3)}
  if dir=315 {image_xscale= 1 set_image_step(spr_mc_dash_diagnal_down,0.3)}
  if dir=270 {set_image_step(spr_mc_dash_down,0.3)}
  if dir=90  {set_image_step(spr_mc_dash_up,0.3)}
 }
}

if state=1
{
 if speed&gt;0 {blurr(80,15)}
 /*Dash release*/ //if keyboard_check_released(key_dash) or pad_dash_release {speed=speed/2}
 if shake&gt;0 {shake-=0.03}
 gamepad_set_vibration(0,shake,shake)
 grav=0
 vspd=0
 hspd=0
 
 if !place_meeting(x+1,y,obj_block) and !place_meeting(x-1,y,obj_block) {if keyboard_check(key_up)     or pad_up    {if !place_meeting(x,y-movespeed/3,obj_block) {y-=movespeed/2}}}
 if !place_meeting(x+1,y,obj_block) and !place_meeting(x+1,y,obj_block) {if keyboard_check(key_down)   or pad_down  {if !place_meeting(x,y+movespeed/3,obj_block) {y+=movespeed/2}}}
 if !place_meeting(x,y+1,obj_block) {if keyboard_check(key_left)   or pad_left  {if !place_meeting(x-movespeed/3,y,obj_block) {x-=movespeed/2}}}
 if !place_meeting(x,y+1,obj_block) {if keyboard_check(key_right)  or pad_right {if !place_meeting(x+movespeed/3,y,obj_block) {x+=movespeed/2}}} 
 
 //slow down dash
 if abs(speed) &gt; 0
 {
  friction=0.5;
 }
 else
 {
  friction=0;
  state=0
 }
 
 if place_meeting(x+lengthdir_x(speed,direction),y+lengthdir_y(speed,direction),obj_block)
 {
  speed=0
  if direction!=270 and direction!=225 and direction!=315 {state=1.5}
 }
  else
 {
 
 }
 //if place_meeting(x-1,y,obj_block) {speed=0}
 //if place_meeting(x+1,y,obj_block) {speed=0}
 //if place_meeting(x,y-1,obj_block) {speed=0}
 //if place_meeting(x,y+1,obj_block) {speed=0}
 //
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State2: Dodge
if state=0 or state=1
{
 if (keyboard_check_pressed(key_roll) or pad_roll)
 {
  if stamina&gt;=3
  {
   //stamina-=3
   if keyboard_check(key_up)    or pad_up    {dir=90}
   if keyboard_check(key_down)  or pad_down  {dir=270}
   if keyboard_check(key_left)  or pad_left  {dir=180}
   if keyboard_check(key_right) or pad_right {dir=0}
   if (keyboard_check(key_up)   or pad_up)   and (keyboard_check(key_left)  or pad_left)  {dir=135}
   if (keyboard_check(key_up)   or pad_up)   and (keyboard_check(key_right) or pad_right) {dir=45}
   if (keyboard_check(key_down) or pad_down) and (keyboard_check(key_left)  or pad_left)  {dir=225}
   if (keyboard_check(key_down) or pad_down) and (keyboard_check(key_right) or pad_right) {dir=315}  
   direction=dir
   speed=longdash
   state=2
  }
 }
}

if state=2
{
 if dir=0 or dir=180   {set_image_stop(spr_mc_dodge_horizontal,1)}
 if dir=90  {set_image_stop(spr_mc_dodge_up,1)}
 if dir=270 {set_image_stop(spr_mc_dodge_down,1)}
 if dir=135 or dir=45  {set_image_stop(spr_mc_dodge_diagnal_up,1)}
 if dir=225 or dir=315 {set_image_stop(spr_mc_dodge_diagnal_down,1)}
 blurr(50,5) i.color=c_black
 grav=0
 vspd=0
 //slow down dash
 if abs(speed) &gt; 0
 {
  friction=1;
 }
 else
 {
  friction=0;
  state=0
 }
 if place_meeting(x+lengthdir_x(speed,direction),y+lengthdir_y(speed,direction),obj_block) {speed=0}
 //
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State 1.5: Dash Stick
if state=1.5
{
 //if alarm[2]=-1 {alarm[2]=100}
 if keyboard_check(key_up)    or pad_up    {dir=90}
 if keyboard_check(key_down)  or pad_down  {dir=270}
 if keyboard_check(key_left)  or pad_left  {dir=180}
 if keyboard_check(key_right) or pad_right {dir=0}
 if (keyboard_check(key_up)   or pad_up)   and (keyboard_check(key_left)  or pad_left)  {dir=135}
 if (keyboard_check(key_up)   or pad_up)   and (keyboard_check(key_right) or pad_right) {dir=45}
 if (keyboard_check(key_down) or pad_down) and (keyboard_check(key_left)  or pad_left)  {dir=225}
 if (keyboard_check(key_down) or pad_down) and (keyboard_check(key_right) or pad_right) {dir=315}
 ///
 if place_meeting(x,y-15,obj_block) {set_image_stop(spr_mc_roof_stick,0.3)}
 if place_meeting(x-15,y,obj_block) {set_image_stop(spr_mc_wall_stick,0.3) image_xscale=-1}
 if place_meeting(x+15,y,obj_block) {set_image_stop(spr_mc_wall_stick,0.3) image_xscale= 1}
 
 
 if keyboard_check_pressed(key_dash) or pad_dash_press
 {
  //if place_meeting(x+lengthdir_x(15,dir),y+lengthdir_y(15,dir),obj_block)
  {
   state=0
  }
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///State10: Hit stun
if state!=10
{
 if place_meeting(x,y,obj_electric_field) and state!=2
 {
  oth=instance_nearest(x,y,obj_electric_field);
  move_outside_solid(point_direction(oth.x+sprite_width/2,oth.y+sprite_height/2,x,y),1)
  direction=point_direction(oth.x+sprite_width/2,oth.y+sprite_height/2,x,y)
  screen_shake(15)
  obj_player.hp-=2
  speed=4
  friction=0.1
  state=10
 }

 if place_meeting(x,y,obj_electric_field_strong)
 {
  oth=instance_nearest(x,y,obj_electric_field_strong);
  move_outside_solid(point_direction(oth.x+sprite_width/2,oth.y+sprite_height/2,x,y),1)
  direction=point_direction(oth.x+sprite_width/2,oth.y+sprite_height/2,x,y)
  screen_shake(15)
  obj_player.hp-=2
  speed=4
  friction=0.1
  state=10
 } 
}

if state=10
{
 if collision_rectangle( x-(sprite_width/2)+speed,y-(sprite_height/2)+speed,x+(sprite_width/2)+speed,y+(sprite_height/2)+speed,obj_block,0,1)
 {
  speed=0
 }
 grav = 0; 
 vspd = 0; 
 if speed=0
 {
  state=0
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///weapon base
//if charging=false {shoot_dir=dir}

//direction
//if weapon!=2
 if keyboard_check(key_up)    or pad_up    {shoot_dir=90}                                                //up
 if keyboard_check(key_down)  or pad_down  {shoot_dir=270}                                               //down
 if keyboard_check(key_left)  or pad_left  {shoot_dir=180 shoot_dir_r=180}                               //left
 if keyboard_check(key_right) or pad_right {shoot_dir=0 shoot_dir_r=0}                                   //right
 if (keyboard_check(key_up)   or pad_up)   and (keyboard_check(key_left)  or pad_left)  {shoot_dir=135}  //up left
 if (keyboard_check(key_up)   or pad_up)   and (keyboard_check(key_right) or pad_right) {shoot_dir=45}   //up right
 if (keyboard_check(key_down) or pad_down) and (keyboard_check(key_left)  or pad_left)  {shoot_dir=225}  //down left
 if (keyboard_check(key_down) or pad_down) and (keyboard_check(key_right) or pad_right) {shoot_dir=315}  //down right
 if crouching=true {if image_xscale=1 {shoot_dir=0 shoot_dir_r=0} else {shoot_dir=180 shoot_dir_r=180}}
 

if keyboard_check_pressed(key_weapon) or pad_weapon_right
{
 if charging=false
 {
  weapon+=1
  if weapon&gt;weaponmax {weapon=0}
 }
}

if pad_weapon_left
{
 if charging=false
 {
  weapon-=1
  if weapon&lt;0 {weapon=weaponmax}
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapon0: Charge shooting
if state=0 or state=1
{
 if (keyboard_check(key_shoot) or pad_shoot)
 {
  if charge=false {weapon=0}
 }
 
  
 
 
 if weapon=0
 {
  if alarm[0]=-1
  {
   if (keyboard_check(key_shoot) or pad_shoot)
   {
    charging=true
    if charge&lt;chargemax {charge+=0.1}
    if charge&gt;2 and creation=false {f=instance_create(x,y,FX_bullet_charge) creation=true}
    if charge&gt;chargemax-5 and !instance_exists(FX_bullet_charge_2) {v=instance_create(x,y,FX_bullet_charge_2) creation=true}
   }
  }   

  if alarm[0]=-1
  {
   if keyboard_check_released(key_shoot) or pad_shoot_release
   {
    //sprite
    xxx=0
    yyy=0
    sprite_bullet_shooting()
    //bolt
    alarm[0]=shoot_delay
    charging=false
    effect_create_fx(x+xxx,y+yyy,FX_bullet_shot)
    i=instance_create(x+xxx,y+yyy,obj_bullet)
    i.charge=charge
    i.direction=shoot_dir
    i.speed=bullet_speed
    i.image_angle=shoot_dir
    if charge&gt;5
    {
     alarm[1]=15
     if charge=chargemax
     {
      i.bounce=2
      state=0
      speed=0
      direction=shoot_dir-180
      speed=30
      friction=3
     }
      else
     {
      i.bounce=1
      state=0
      speed=0
      direction=shoot_dir-180
      speed=10
      friction=1
     }
    }
    charge=1
    creation=false
    if instance_exists(f) 
    {
     with (f)
     {
      instance_destroy()
     }
    }
    if instance_exists(v) 
    {
     with (v)
     {
      instance_destroy()
     }
    }
   }
  }
  if charge&gt;=5 gamepad_set_vibration(0,0.1,0.1)
  if charge&gt;18 gamepad_set_vibration(0,0.7,0.7)
  ///cancel charge if not holding button
  if !keyboard_check(key_shoot) and !pad_shoot
  {
   charge=false
  }
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapon1: Saw gun
if weapon=1
{
 if alarm[0]=-1 and stamina&gt;=3
 {
  if (keyboard_check(key_shoot) or pad_shoot)
  {
   charging=true
   i=instance_create(x,y,obj_saw)
   i.direction=shoot_dir
   i.speed=saw_speed
   alarm[0]=saw_delay
   stamina-=3
  }
  else
  {
   charging=false
  }
 }
  else
 {
  if !(keyboard_check(key_shoot) or pad_shoot)
  {
   charging=false
  }
 } 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapon2: Rapid Shooting

if weapon=2
{
 if shoot_dir!=180{if shoot_dir!=0{shoot_dir=0}}
 if keyboard_check(key_shoot) or pad_shoot
 {
  charging=true
  if alarm[0]=-1
  {
   alarm[0]=shoot_delay/2
   i=instance_create(x,y,obj_bullet)
   i.charge=charge
   i.direction=shoot_dir
   i.speed=bullet_speed
   i.color=c_blue
   if charge&gt;5
   {
    if charge=chargemax
    {
     i.bounce=2
    }
     else
    {
     i.bounce=1
    }
   }
   charge=1
   creation=false
   if instance_exists(f) 
   {
    with (f)
    {
     instance_destroy()
    }
   }
   if instance_exists(v) 
   {
    with (v)
    {
     instance_destroy()
    }
   }
  }
 }
 if keyboard_check_released(key_shoot) or pad_shoot_release
 {
  charging=false
 }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapon3: Laser weapon
if (keyboard_check(key_shooti) or pad_shooti)
{
 if charge=false {weapon=3}
}

if weapon=3
{
 if !keyboard_check(key_shooti) and !pad_shooti
 {
  charge=false
 }
}


///in draw event
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stats Base

//stamina regen
if stamina&gt;mstamina
{
 stamina=mstamina
}
 else
{
 stamina+=0.01+(stamina/1000)
}
//hp
if hp&lt;0
{
 hp=0
}
//movespeed
f_movespeed=movespeed+b_movespeed
if b_movespeed &lt; -movespeed {b_movespeed=-movespeed}
longdash=(f_movespeed*2)+6

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_electric_field_strong">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>move_outside_all(point_direction(other.x,other.y,x,y),1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move outside
/*
move_outside_all(shoot_dir,10)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///animation end

if end_animation=true {image_speed=0 image_index=image_number-1}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///color
draw_self()
/*
if state=0  draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_red,1)
if state=1  draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_white,1)
if state=2  draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_lime,1)
if state=10 draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,c_red,random_range(0,1))

///weapon
if weapon=0 {draw_sprite_ext(dir_pointer,-1,x,y,1,1,shoot_dir,c_yellow,1)}
if weapon=1 {draw_sprite_ext(dir_pointer,-1,x,y,1,1,shoot_dir,c_purple,1)}
if weapon=2 {draw_sprite_ext(dir_pointer,-1,x,y,1,1,shoot_dir,c_blue,1)}
if weapon=3 {draw_sprite_ext(dir_pointer,-1,x,y,1,1,shoot_dir_r,c_lime,1)}


//draw_text(x,y-32,charge)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Weapon3: Laser weapon
/*
if weapon=3
{
 if keyboard_check(key_shooti) or pad_shooti
 {
  scr_laser_weapon()
  charge=true
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
